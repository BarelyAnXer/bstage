name: Build and Publish Docker Image
on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:  # Manual trigger
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: barelyanxer/backstage

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This permission is needed to indicate that we're pushing to GHCR
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.11.0'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install 
      - name: Build TypeScript
        run: yarn tsc --noUnusedLocals false --noUnusedParameters false
      - name: Build backend
        run: yarn build:backend
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Generate custom tag for manual runs
      - name: Set manual test tag
        if: github.event_name == 'workflow_dispatch'
        run: echo "MANUAL_TAG=test-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            type=raw,value=${{ env.MANUAL_TAG }},enable=${{ github.event_name == 'workflow_dispatch' }}
          flavor: |
            latest=auto
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: packages/backend/Dockerfile  # Specify the Dockerfile location
          platforms: linux/amd64  # Explicitly build for Linux amd64 architecture
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}
            VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}
          cache-from: type=gha
          cache-to: type=gha,mode=max